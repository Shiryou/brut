# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Update git tag
      run: |
        git tag -f nightly
        git push -f origin nightly

  build:
    name: Build Release
    needs: create_release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact_src: ./ResourceUtilityCli/bin/Release/net8.0/linux-x64/publish/brut
            artifact_dst: ./brut-ubuntu
          - os: macos-latest
            artifact_src: ./ResourceUtilityCli/bin/Release/net8.0/osx-arm64/publish/brut
            artifact_dst: ./brut-mac
            extension: 
          - os: windows-latest
            artifact_src: .\ResourceUtilityCli\bin\Release\net8.0\win-x64\publish\brut.exe
            artifact_dst: .\brut-win.exe
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test
    - name: Publish
      run: dotnet publish --configuration Release --no-build

    - name: Move artifact
      if: matrix.os != 'windows-latest'
      run: mv "${{ matrix.artifact_src }}" "${{ matrix.artifact_dst }}"
    - name: Move artifact
      if: matrix.os == 'windows-latest'
      run: Move-Item -Path "${{ matrix.artifact_src }}" -Destination "${{ matrix.artifact_dst }}" -Force

    - name: Update nightly release
      uses: ncipollo/release-action@main
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: "${{ matrix.artifact_dst }}"
        tag: "nightly"
        commit: ${{ github.ref_name }}
        body: A build of the most recent compilable commit to the repository. Use at your own risk.
        prerelease: true
        allowUpdates: true
        updateOnlyUnreleased: true
        removeArtifacts: false
        replacesArtifacts: true
